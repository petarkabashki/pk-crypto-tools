Install:

-------------------------------
openssl:

If you need to have openssl@1.1 first in your PATH, run:
  echo 'export PATH="/usr/local/opt/openssl@1.1/bin:$PATH"' >> ~/.zshrc

For compilers to find openssl@1.1 you may need to set:
  export LDFLAGS="-L/usr/local/opt/openssl@1.1/lib"
  export CPPFLAGS="-I/usr/local/opt/openssl@1.1/include"

For pkg-config to find openssl@1.1 you may need to set:
  export PKG_CONFIG_PATH="/usr/local/opt/openssl@1.1/lib/pkgconfig"

-------------------------------

download source from https://www.postgresql.org/ftp/source/v13.3/



mkdir -p usr/local/pgsql



./configure --enable-R-shlib --prefix=$HOME/quant/py-crypto-tools/usr/local/pgsql --with-python --with-openssl


make
make install

export LD_LIBRARY_PATH=usr/local/pgsql/lib

mkdir usr/local/pgsql/data
usr/local/pgsql/bin/initdb -D usr/local/pgsql/data -U postgres
usr/local/pgsql/bin/pg_ctl -D usr/local/pgsql/data -l pgsql.log start
usr/local/pgsql/bin/createdb test
usr/local/pgsql/bin/psql test

usr/local/pgsql/bin/pg_ctl -D usr/local/pgsql/data stop

***************************************************************


export PATH=$PATH:$HOME/quant/py-crypto-tools/usr/local/pgsql/bin

psql -c 'SHOW config_file'

sudo -u user psql user

psql --> \du


CREATE USER postgres SUPERUSER;
CREATE DATABASE postgres WITH OWNER postgres;
---
\dx
SELECT * FROM pg_extension;
---
SELECT * FROM pg_available_extensions;

***************************************************************
CREATE EXTENSION timescaledb;


Using postgresql.conf at this path:
/usr/local/var/postgres/postgresql.conf


psql -U postgres -h localhost 
\c tutorial

psql -U postgres -h localhost -d trader

CREATE TABLE klines (
    time        TIMESTAMPTZ       NOT NULL,
    symb      TEXT              NOT NULL,
    curr      TEXT              NOT NULL,
    ticker      TEXT              NOT NULL,
    src      TEXT              NOT NULL,
    res  TEXT              NOT NULL,
    open DOUBLE PRECISION  NOT NULL,
    high DOUBLE PRECISION  NOT NULL,
    low DOUBLE PRECISION  NOT NULL,
    close DOUBLE PRECISION  NOT NULL,
    volume DOUBLE PRECISION  NULL
);


SELECT create_hypertable('klines', 'time');

psql -d trader -c "\COPY (SELECT * FROM candles) TO candles.csv DELIMITER ',' CSV HEADER"

psql -d trader -c "\COPY klines FROM ./data/binance/BTC_USDT-5m.csv CSV HEADER"

select * from pg_stat_activity;

SELECT * FROM pg_stat_activity WHERE state IN ('active', 'idle in transaction') AND pid <> pg_backend_pid();

*******************************************************

for f in data/binance/*.csv
do
  echo "Processing $f file..."
  psql -U postgres -d trader -c "\COPY klines(time,symb,curr,ticker,src,res,open,high,low,close,volume) FROM $f CSV HEADER DELIMITER ','"
done
